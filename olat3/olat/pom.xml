<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!--
  This POM emulates the role of a submodule "embedded" in its parent
  module in order to achieve the necessary module level dependencies.
  As such it should be consider provisional until the final project
  structure has been established.
  -->
  <parent>
     <groupId>org.olat</groupId>
    <artifactId>OLAT-HEAD</artifactId>
    <version>${olatversion}</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.olat</groupId>
  <artifactId>OLAT-HEAD-webapp</artifactId>
  <version>${olatversion}</version>
  <packaging>war</packaging>
  <name>OLAT Web Application</name>
  <!--
  Profiles support variations on the OLAT build process to cater for the
  needs of specific groups of users (e.g., developers, deployment managers etc.)
  -->
  <profiles>
    <profile>
      <id>developer</id>
      <build>
          <!--
          Developers that use Eclipse (and have already issued the
          eclipse:eclipse) and have a WTP Server created for their
          locally installed Tomcat instance would probably want the
          build to configure that server for them.
		  -->
		 <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.4</version>
            <executions>
              <execution>
                <id>tomcat-resources</id>
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
				<outputDirectory>${project.basedir}/../../Servers/${eclipse.server.name}-config</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${basedir}/../eclipse/tomcat</directory>
                      <filtering>true</filtering>
                      <includes>
                        <include>*.xml</include>
                        <include>*.properties</include>
                        <include>*.policy</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <build>
    <sourceDirectory>${basedir}/../webapp/WEB-INF/src</sourceDirectory>
    <outputDirectory>${basedir}/target/classes</outputDirectory>
    <testSourceDirectory>${basedir}/../webapp/WEB-INF/test/java</testSourceDirectory>
	<finalName>olat</finalName>
    <plugins>
     <!-- 
     Maven (2.x) does not have a convenient manner to load properties from 
     an external file hence this plugin to make use of olat.properties 
     dynamically.  Hooking this plugin into the validate phase means that
     its operation is transparent (i.e., no explicit invovcation of the
     properties:read-project-properties goal)
     -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <configuration>
          <files>
            <file>${basedir}/../webapp/WEB-INF/src/serviceconfig/olat.properties</file>
          </files>
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--
      Some resources of operational interest are shipped with OLAT
      but should be considered optional and are those transferred
      to a shared resources directory.
      -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>shared-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/../target/share</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/..</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>monitoring/**</include>
                    <include>conf/**</include>
                    <include>htdocs/**</include>
				  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!--
          Ensures the filter copying of scripts used for installation of the database 
           -->
          <execution>
            <id>database-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/../target/database</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/../webapp/WEB-INF/src/resources/database</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/*.sql</include>
				  </includes>
                </resource>
              </resources>
            </configuration>
		  </execution>
		
        </executions>
      </plugin>
      <!--
      OLAT builds must use Maven 2.2.x or later !  
	  -->
	  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
		    <id>show-versions</id>
			<phase>validate</phase>
            <goals>
			  <goal>display-info</goal>
			</goals>
		  </execution>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>2.2+</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>1.6+</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--
      OLAT requires JDK 1.6 or later !
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
		  <target>1.6</target>
		  <encoding>utf-8</encoding>
		  <!--
		  These apparently harmless settings cause certain types of builds
          to fail (typically with a failure to find the "javac" program ) - this
          appears to be a Maven issue and is currently pending investigation
		  <fork>true</fork>
		  <meminitial>512m</meminitial>
		  <maxmem>1024m</maxmem>
		  -->
        </configuration>
	  </plugin>
	  
	  <!-- Generate XSD from JAXB Annotated classes -->
	  
		<plugin>
			<groupId>com.sun.tools.jxc.maven2</groupId>
			<artifactId>maven-jaxb-schemagen-plugin</artifactId>
			<version>1.2</version>
			<executions>
				<execution>
					<phase>generate-resources</phase>
					<goals>
						<goal>generate</goal>
					</goals>
				</execution>
			</executions>
			<configuration>
				<srcdir>${basedir}/../webapp/WEB-INF/src/</srcdir>
				<includes>
					<include>org/olat/restapi/**/*VO.java</include>
					<include>org/olat/user/restapi/**/*VO.java</include>
					<include>org/olat/modules/fo/restapi/*VO.java</include>
					<include>org/olat/catalog/restapi/*VO.java</include>
				</includes>
				<excludes></excludes>
				<destdir>${project.build.outputDirectory}</destdir>
				<verbose>true</verbose>
			</configuration>
			<dependencies>
				<dependency>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
          <version>2.9.1</version>
				</dependency>
			</dependencies>
		</plugin>
	  
	  <!-- Javadoc -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-javadoc-plugin</artifactId>
			<version>2.4</version>
				<executions>
 					<execution>
						<goals>
							<goal>javadoc</goal>
 						</goals>
						<phase>compile</phase>
					</execution>
				</executions>

				<configuration>
					<encoding>UTF-8</encoding>
					<verbose>false</verbose>
					<show>public</show>
					<subpackages>
						org.olat.restapi,org.olat.catalog.restapi,org.olat.modules.fo.restapi,
						org.olat.notifications.restapi,org.olat.user.restapi,org.olat.course.nodes
					</subpackages>
					
					<doclet>com.sun.jersey.wadl.resourcedoc.ResourceDoclet</doclet>
					<docletArtifacts>
						<docletArtifact>
							<groupId>com.sun.jersey.contribs</groupId>
							<artifactId>wadl-resourcedoc-doclet</artifactId>
							<version>1.1.5.1</version>
						</docletArtifact>
				    <!--
				  	Also specify jersey and xerces as doclet artifacts as the ResourceDoclet
				  	uses classes provided by them to generate the resourcedoc.
						-->
            <docletArtifact>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-server</artifactId>
                <version>1.1.5.1</version>
            </docletArtifact>
            <docletArtifact>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>2.9.1</version>
            </docletArtifact>
        	</docletArtifacts>
        	<additionalparam>-output ${project.build.outputDirectory}/resourcedoc.xml</additionalparam>
				</configuration>
		</plugin>
			
		<plugin>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>maven-wadl-plugin</artifactId>
			<version>1.1.5.1</version>
			<executions>
				<execution>
					<id>generate</id>
					<goals>
						<goal>generate</goal>
					</goals>
					<phase>compile</phase>
				</execution>
			</executions>
         
			<configuration>
				<wadlFile>${project.build.outputDirectory}/application.wadl</wadlFile>
				<formatWadlFile>true</formatWadlFile>
				<baseUri>http://www.example.com</baseUri>
				<packagesResourceConfig>
					<param>org.olat.restapi;org.olat.catalog.restapi;org.olat.notifications.restapi;org.olat.modules.fo.restapi;org.olat.user.restapi;org.olat.course.nodes</param>
				</packagesResourceConfig>
				<wadlGenerators>
					<wadlGeneratorDescription>
						<className>com.sun.jersey.server.wadl.generators.WadlGeneratorApplicationDoc</className>
						<properties>
							<property>
								<name>applicationDocsFile</name>
								<value>${basedir}/../webapp/WEB-INF/src/org/olat/restapi/support/application-doc.xml</value>
							</property>
						</properties>
					</wadlGeneratorDescription>
					<wadlGeneratorDescription>
						<className>com.sun.jersey.server.wadl.generators.WadlGeneratorGrammarsSupport</className>
						<properties>
							<property>
								<name>grammarsFile</name>
								<value>${basedir}/../webapp/WEB-INF/src/org/olat/restapi/support/application-grammars.xml</value>
							</property>
						</properties>
					</wadlGeneratorDescription>
					<wadlGeneratorDescription>
						<className>com.sun.jersey.server.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport</className>
						<properties>
							<property>
								<name>resourceDocFile</name>
								<value>${project.build.outputDirectory}/resourcedoc.xml</value>
							</property>
						</properties>
					</wadlGeneratorDescription>
				</wadlGenerators>
			</configuration>
		</plugin>
		
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>xml-maven-plugin</artifactId>
			<executions>
				<execution>
					<id>xslt: ${project.build.outputDirectory}/application.html</id>
					<phase>compile</phase> <!-- append to the packaging phase. -->
 					<goals>
						<goal>transform</goal> <!-- goals == mojos -->
					</goals>
					<configuration>
						<transformationSets>
            	<transformationSet>
              	<dir>${project.build.outputDirectory}</dir>
              	<includes>
              		<include>application.wadl</include>
              	</includes>
              	<outputDir>${project.build.outputDirectory}</outputDir>
              	<stylesheet>${basedir}/../webapp/WEB-INF/src/org/olat/restapi/support/wadl_documentation.xsl</stylesheet>
              	<fileMappers>
                	<fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                  	<targetExtension>.html</targetExtension>
                	</fileMapper>
              	</fileMappers>
            	</transformationSet>
          	</transformationSets>
					</configuration>
				</execution>
			</executions>
			<dependencies>
				<dependency>
					<groupId>net.sf.saxon</groupId>
					<artifactId>saxon</artifactId>
					<version>8.7</version>
				</dependency>
			</dependencies>
		</plugin>
	  
	  <!--
	  The OLAT font plugin goal is responsible for unpacking fonts as determined
      by the unpack.fonts property.  
      -->
      <plugin>
	    <groupId>org.olat.plugins</groupId>
        <artifactId>olat-maven-plugin</artifactId>
  		<configuration>
			<fontsArchive>${basedir}/../webapp/static/js/jsMath/fonts.zip</fontsArchive>
			<logDirectory>${basedir}/target/logs/db</logDirectory>
			<adminScript>initDatabase.sql</adminScript>
		    <script>setupDatabase.sql</script>
		</configuration>    
		<executions>
		  <!-- 
		  precisely what gets cleaned by olat is controlled by olat.plugin.clean.* properties
		  -->
<!--          <execution>-->
<!--            <id>clean-application</id>-->
<!--            <phase>clean</phase>-->
<!--            <goals>-->
<!--              <goal>clean</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--     TODO:gs what is that used for?     <execution>-->
<!--            <id>check-init</id>-->
<!--            <phase>validate</phase>-->
<!--            <goals>-->
<!--              <goal>init</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--          <execution>-->
<!--            <id>filter-copy-resources</id>-->
<!--            <phase>validate</phase>-->
<!--            <goals>-->
<!--              <goal>properties</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--          <execution>-->
<!--            <id>unpack-fonts</id>-->
<!--            <phase>process-resources</phase>-->
<!--            <goals>-->
<!--              <goal>font</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--          <execution>-->
<!--            <id>install-database</id>-->
<!--            <phase>install</phase>-->
<!--            <goals>-->
<!--              <goal>dbinstall</goal>-->
<!--			</goals>-->
<!--          </execution>-->
        </executions>
       </plugin>
      <!--
      The Eclipse plugin is only of interest to developers
      and requires that WTP be installed.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.7</version>
        <configuration>
		    <downloadSources>false</downloadSources>
			<!-- 
			mandatory WTP version may be necessary at a future date
			<wtpversion>2.0</wtpversion>
			-->
        </configuration>
      </plugin>
      <!--
      OLAT assets are packaged in a WAR for deployment.  Owing to
      the current project structure these must be sourced from a
      variety of locations.  This will be simplified at a later
	  date.
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
            </manifest>
          </archive>
          <webResources>
            <resource>
              <directory>../webapp/WEB-INF</directory>
              <targetPath>WEB-INF</targetPath>
              <filtering>false</filtering>
			  <includes>
 			  	<include>AAP.xml</include>
			  	<include>olat_portals_institution.xml</include>
 			  	<include>olat_portals_links.xml</include>
 			  	<include>treecache.xml</include>
				<include>web.xml</include>
                <include>*.properties</include>
                <include>*.xsd</include>
              </includes>
            </resource>
            <resource>
			  <directory>../webapp/WEB-INF</directory>
			  <targetPath>WEB-INF/classes</targetPath>
              <filtering>true</filtering>
              <includes>
                <include>treecache.xml</include>
              </includes>
            </resource>
            <resource>
			  <directory>../webapp/WEB-INF/services</directory>
			  <targetPath>WEB-INF/services</targetPath>
            </resource>
            <resource>
			  <directory>../webapp/WEB-INF/src</directory>
			  <targetPath>WEB-INF/classes</targetPath>
              <filtering>false</filtering>
              <includes>
                <include>**/**</include>
              </includes>
              <excludes>
                <exclude>**/*.class</exclude>
				<exclude>**/*.java</exclude>
				<exclude>**/log4j.xml</exclude>
              </excludes>
            </resource>
            <resource>
              <directory>../conf</directory>
              <targetPath>WEB-INF</targetPath>
              <filtering>true</filtering>
              <includes>
                <include>**/**</include>
              </includes>
              <excludes>
				<exclude>**/log4j.xml</exclude>
              </excludes>
            </resource>
            <resource>
              <directory>../webapp</directory>
              <filtering>false</filtering>
              <includes>
                <include>static/**</include>
                <include>help/**</include>
                <include>examples/**</include>
              </includes>
              <excludes>
                <exclude>WEB-INF</exclude>
               </excludes>
			</resource>
            <resource>
              <directory>..</directory>
              <filtering>false</filtering>
              <includes>
              <!--  LICENSE.TXT should be renamed to NOTICE.TXT see OLAT-5195 -->
                <include>LICENSE.TXT</include>
                <include>NOTICE.TXT</include>
                <include>COPYING</include>
              </includes>
			</resource>
          </webResources>
          <webXml>../webapp/WEB-INF/web.xml</webXml>
        </configuration>
      </plugin>
	  <!--
	  Convenience plugin to support the deployment to a Tomcat container
      from the build host.
	  -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.0-beta-1</version>
		  <configuration>
		  <!-- 
		  server must be identified e.g., olat-mvn-tomcat, in a manner consistent
		  with the local settings.xml (see olat.local.properties for how to set this)
		  this is configurable since it is likely that the need to cohost several
    	  servers will arise 
		  -->
		  <server>${mvn.tomcat.server}</server>
		  <url>${tomcat.manager.url}</url>
		  <path>/olat</path>
		  <warFile>${basedir}/target/olat.war</warFile>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <!-- 
    Specific OLAT JARs MUST appear at the front of the classpath where they
    will be loaded in preference to alternatives.  As of Maven 2.0.9 POM
    ordering is sufficient to ensure that the application MANIFEST is 
    correctly written.
    -->
    <dependency>
      <groupId>org.olat.core</groupId>
      <artifactId>olatcore</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.olat</groupId>
      <artifactId>olat3_i18n_all</artifactId>
      <version>SNAPSHOT</version>
    </dependency>
    <dependency>
    	<groupId>org.olat.core</groupId>
  		<artifactId>olatcore_i18n_all</artifactId>
  		<version>SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.olat.testutils</groupId>
      <artifactId>olat-codepoints-full</artifactId>
      <version>olat-codepoints-full.jar</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-core</artifactId>
      <version>5.3.2</version>
      <exclusions>
			<exclusion>
				<groupId>backport-util-concurrent</groupId>
				<artifactId>backport-util-concurrent</artifactId>
			</exclusion>
			<exclusion>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
			</exclusion>
		</exclusions>
    </dependency>
    <dependency>
      <groupId>org.beanshell</groupId>
      <artifactId>bsh-core</artifactId>
      <version>2.0b4</version>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>2.2</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>commons-vfs</groupId>
      <artifactId>commons-vfs</artifactId>
      <version>1.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
       <groupId>ical4j</groupId>
       <artifactId>ical4j</artifactId>
       <version>0.9.19</version><!-- Must be version 0.9.19 ! Newer version have problem with 'serientermin' -->
       <scope>compile</scope>
     </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.4.2.0</version>
    </dependency>
    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.8.0.GA</version>
    </dependency>
    <dependency>
      <groupId>oro</groupId>
      <artifactId>oro</artifactId>
      <version>2.0.8</version>
    </dependency>
    <dependency>
      <groupId>jamwikiParser.jar</groupId>
      <artifactId>jamwikiParser.jar</artifactId>
      <version>jamwikiParser.jar</version>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
      <version>1.1.1</version>
    </dependency>
		<dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>4.0.1</version>
    </dependency>
    <dependency>
      <groupId>opensaml</groupId>
      <artifactId>opensaml</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.jivesoftware</groupId>
      <artifactId>smack</artifactId>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.jivesoftware</groupId>
      <artifactId>smackx</artifactId>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-highlighter</artifactId>
      <version>3.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-spellchecker</artifactId>
      <version>3.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>3.5-FINAL</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-scratchpad</artifactId>
      <version>3.5-FINAL</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>3.5-FINAL</version>
      <exclusions>
      	<exclusion><!-- included in jdk 1.6 -->
					<groupId>stax</groupId>
					<artifactId>stax-api</artifactId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcmail-jdk15</artifactId>
      <version>1.44</version>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15</artifactId>
      <version>1.44</version>
    </dependency>
    <dependency>
      <groupId>jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>jgrapht</groupId>
      <artifactId>jgrapht</artifactId>
      <version>0.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-common-core</artifactId>
      <version>2.2.8.GA</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging-spi</artifactId>
      <version>2.0.5.GA</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.cache</groupId>
      <artifactId>jbosscache-core</artifactId>
      <version>3.2.2.GA</version> <!-- cache is used in webdav session cache -->
    </dependency>
    <dependency>
      <groupId>reload-diva</groupId>
      <artifactId>reload-diva</artifactId>
      <version>reload_dist255-diva.jar</version>
    </dependency>
    <dependency>
      <groupId>reload-dweezil</groupId>
      <artifactId>reload-dweezil</artifactId>
      <version>reload_dist255-dweezil.jar</version>
    </dependency>
    <dependency>
      <groupId>reload-jdom</groupId>
      <artifactId>reload-jdom</artifactId>
      <version>reload_dist255-jdom.jar</version>
    </dependency>
    <dependency>
      <groupId>reload-moonunit</groupId>
      <artifactId>reload-moonunit</artifactId>
      <version>reload_dist255-moonunit.jar</version>
    </dependency>
    <dependency>
      <groupId>rome</groupId>
      <artifactId>rome</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>jfree</groupId>
      <artifactId>jfreechart</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>ch.ethz</groupId>
      <artifactId>pfplms-scorm</artifactId>
      <version>unknown</version>
      <classifier>patched</classifier><!-- patched version of scorm adapter: contact: matthai.kurian@gmail.com  -->
    </dependency>
	<dependency>
	  <groupId>gnu-regexp</groupId>
	  <artifactId>gnu-regexp</artifactId>
	  <version>1.1.4</version>
	</dependency>    
	<dependency>
      <groupId>javax.sql</groupId>
      <artifactId>jdbc-stdext</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
    	<!-- DO NOT UPDATE! -->
    	<!-- Due to our special setup where we use the jdbc driver to convert from utf-8 to iso we cannot update this lib at the moment. -->
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.0.8</version>
    </dependency>
	<dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>8.4-701.jdbc4</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.5.11</version>
    </dependency>
    <dependency>
	    <groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.11</version>
    </dependency>
    <dependency>
      <groupId>org.olat.plugins</groupId>
      <artifactId>olat-maven-plugin</artifactId>
      <version>1.0-SNAPSHOT</version>
	</dependency>
	<dependency>
	  <groupId>edenlib</groupId>
	  <artifactId>edenlib</artifactId>
	  <version>1.3</version>
	</dependency>
	<!-- basic LTI stuff for lti demo: http://www.imsglobal.org/toolsinteroperability2.cfm-->
	<dependency>
	    <groupId>org.sakaiproject.basiclti</groupId>
		<artifactId>basiclti-util</artifactId>
	    <version>1.4-SNAPSHOT</version>
	</dependency>
  </dependencies>
</project>
