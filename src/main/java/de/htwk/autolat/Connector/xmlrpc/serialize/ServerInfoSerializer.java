/*
 * Warning: This is a generated file. Edit at your own risk.
 * generated by Gen.hs on Wed Oct 28 18:26:49 CET 2009.
 */

package de.htwk.autolat.Connector.xmlrpc.serialize;
import de.htwk.autolat.Connector.types.*;

import java.util.List;
import redstone.xmlrpc.*;

@SuppressWarnings({"unused", "unchecked"})
public class ServerInfoSerializer
{
    private static final Serializer<ServerInfo> inst =
        new Serializer<ServerInfo>()
        {
            Serializer<Version> protocolVersionSerializer = null;
            Serializer<String> serverNameSerializer = null;
            Serializer<Version> serverVersionSerializer = null;
            
            public Object serialize(ServerInfo val)
            {
                if (protocolVersionSerializer == null)
                    protocolVersionSerializer = VersionSerializer.getInstance();
                if (serverNameSerializer == null)
                    serverNameSerializer = StringSerializer.getInstance();
                if (serverVersionSerializer == null)
                    serverVersionSerializer = VersionSerializer.getInstance();
                
                XmlRpcStruct inner = new XmlRpcStruct();
                inner.put("protocol_version", protocolVersionSerializer.serialize(val.getProtocolVersion()));
                inner.put("server_name", serverNameSerializer.serialize(val.getServerName()));
                inner.put("server_version", serverVersionSerializer.serialize(val.getServerVersion()));
                
                XmlRpcStruct outer = new XmlRpcStruct();
                outer.put("ServerInfo", inner);
                return outer;
            }
            
        }
        ;
    
    public static Serializer<ServerInfo> getInstance()
    {
        return inst;
    }
    
}
