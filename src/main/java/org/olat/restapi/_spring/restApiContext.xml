<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="restModule" class="org.olat.restapi.RestModule">
		<property name="defaultEnabled" value="false"/>
		<property name="coordinator" ref="coordinatorManager" />
		<property name="persistedProperties">
			<bean class="org.olat.core.configuration.PersistedProperties" scope="prototype" init-method="init" destroy-method="destroy"
				depends-on="org.olat.core.util.WebappHelper">
				<constructor-arg index="0" ref="coordinatorManager" />
				<constructor-arg index="1" ref="restModule" />
			</bean>
		</property>
	</bean>

	<bean id="org.olat.restapi.security.RestSecurityBean" class="org.olat.restapi.security.RestSecurityBeanImpl"/>
	
	<bean id="org.olat.restapi.support.RestRegistrationService" class="org.olat.restapi.support.RestRegistrationServiceImpl">
		<property name="classnames">
			<list>
				<value>org.olat.restapi.api.ApiWebService</value>
				<value>org.olat.restapi.i18n.I18nWebService</value>
				<value>org.olat.restapi.support.Ping</value>
				<value>org.olat.restapi.security.Authentication</value>
				<value>org.olat.user.restapi.UserWebService</value>
				<value>org.olat.user.restapi.ContactsWebService</value>
				<value>org.olat.user.restapi.UserAuthenticationWebService</value>
				<value>org.olat.restapi.group.LearningGroupWebService</value>
				<value>org.olat.restapi.user.UserFoldersWebService</value>
				<value>org.olat.restapi.repository.RepositoryEntriesResource</value>
				<value>org.olat.restapi.repository.course.CourseWebService</value>
				<value>org.olat.restapi.repository.course.CoursesWebService</value>
				<value>org.olat.restapi.repository.course.CoursesInfosWebService</value>
				<value>org.olat.restapi.repository.course.CourseElementWebService</value>
				<value>org.olat.restapi.repository.course.CourseAssessmentWebService</value>
				<value>org.olat.restapi.repository.course.CourseResourceFolderWebService</value>
				<value>org.olat.course.nodes.co.COWebService</value>
				<value>org.olat.course.nodes.en.ENWebService</value>
				<value>org.olat.course.nodes.bc.BCWebService</value>
				<value>org.olat.modules.wiki.restapi.WikisWebService</value>
				<value>org.olat.modules.fo.restapi.ForumImportWebService</value>
				<value>org.olat.modules.fo.restapi.ForumCourseNodeWebService</value>
				<value>org.olat.modules.fo.restapi.MyForumsWebService</value>
				<value>org.olat.catalog.restapi.CatalogWebService</value>
				<value>org.olat.notifications.restapi.NotificationsWebService</value>
				<value>org.olat.commons.calendar.restapi.CalendarWebService</value>
				<value>org.olat.restapi.log.LogWebService</value>
				<value>org.olat.restapi.system.SystemWebService</value>
			</list>
		</property>
		<!-- property name="singletonBeans">
			<list>
				<ref bean="userWebService"/>
			</list>
		</property -->
	</bean>
	
	<bean id="systemSamplerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	    <property name="jobDetail" ref="systemSamplerJob" />
	    <!-- adjust cron style syntax for your needs 
	    A "Cron-Expression" is a string comprised of 6 or 7 fields separated by white space. The 6 mandatory and 1 optional fields are as follows:
			Field Name 	  	Allowed Values 	  	Allowed Special Characters
			Seconds 	  	0-59 	  			, - * /
			Minutes 	  	0-59 	  			, - * /
			Hours 	  		0-23 	  			, - * /
			Day-of-month 	1-31 	  			, - * ? / L W C
			Month 	  		1-12 or JAN-DEC 	, - * /
			Day-of-Week 	1-7 or SUN-SAT 	  	, - * ? / L C #
			Year (Optional)	empty, 1970-2099 	, - * /

			As of OLAT 6.3 it's best to let the cronjob run every two hours since users can now choose how often 
			they will get notified. The shortest interval is set to two hours. 	    	
	    -->
	    <property name="cronExpression" value="*/15 * * * * ?" />

			<!-- OLAT-5093 start delay ensures there's no conflict with server startup and db not being ready yet -->
	    <property name="startDelay" value="0" />
	</bean>
	
	<bean id="systemSamplerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
	  <property name="jobClass" value="org.olat.restapi.system.SamplerJob" />
	</bean>
	
	<!-- Using singletons would be good for the future and prevent using CoreSpringFactory -->
	<!-- bean id="userWebService" class="org.olat.user.restapi.UserWebService"/ -->

<bean id="configFactory" class="org.olat.restapi.repository.course.config.CustomConfigFactory">
	<constructor-arg index="0" ref="${assessmentplugin.activate}CustomConfigCreator" />
</bean>

<bean id="OlatCustomConfigCreator" class="org.olat.restapi.repository.course.config.OlatCustomConfigCreator" lazy-init="true"/>

</beans>
